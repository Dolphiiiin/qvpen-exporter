name: Build and Release

on:
  workflow_dispatch:
  pull_request:

jobs:
  # Validate Repository Configuration
  config:
    runs-on: ubuntu-latest
    outputs:
      config_package: ${{ steps.config_package.outputs.configPackage }}
    steps:
      - name: Validate Package Config
        id: config_package
        run: |
          if [ "${{ vars.PACKAGE_NAME }}" != "" ]; then
            echo "configPackage=true" >> $GITHUB_OUTPUT;
          else
            echo "configPackage=false" >> $GITHUB_OUTPUT;
          fi

  # Build and release the Package for workflow_dispatch
  release:
    if: github.event_name == 'workflow_dispatch' && needs.config.outputs.config_package == 'true'
    runs-on: ubuntu-latest
    needs: config
    permissions:
      contents: write
    env:
      packagePath: Packages/${{ vars.PACKAGE_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Environment Variables
        run: |
          echo "zipFile=${{ vars.PACKAGE_NAME }}-${{ vars.VERSION }}.zip" >> $GITHUB_ENV
          echo "unityPackage=${{ vars.PACKAGE_NAME }}-${{ vars.VERSION }}.unitypackage" >> $GITHUB_ENV
          echo "version=${{ vars.VERSION }}" >> $GITHUB_ENV

      - name: Create Package Zip
        working-directory: "${{ env.packagePath }}"
        run: zip -r "${{ github.workspace }}/${{ env.zipFile }}" .

      - name: Track Package Meta Files
        run: find "${{ env.packagePath }}/" -name \*.meta >> metaList

      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@v1
        with:
          package-path: ${{ env.unityPackage }}
          include-files: metaList

      - name: Create Tag
        id: tag_version
        uses: rickstaa/action-create-tag@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.version }}
          force_push_tag: false
          tag_exists_error: true
          no_verify_tag: false

      - name: Make Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.zipFile }}
            ${{ env.unityPackage }}
            ${{ env.packagePath }}/package.json
          tag_name: ${{ env.version }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            ${{ env.zipFile }}
            ${{ env.unityPackage }}

  # Build the Package for pull_request
  build:
    if: github.event_name == 'pull_request' && needs.config.outputs.config_package == 'true'
    runs-on: ubuntu-latest
    needs: config
    permissions:
      contents: write
    env:
      packagePath: Packages/${{ vars.PACKAGE_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Environment Variables
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          VERSION=${{ vars.VERSION }}-pr${PR_NUMBER}
          echo "zipFile=${{ vars.PACKAGE_NAME }}-${VERSION}.zip" >> $GITHUB_ENV
          echo "unityPackage=${{ vars.PACKAGE_NAME }}-${VERSION}.unitypackage" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_ENV

      - name: Create Package Zip
        working-directory: "${{ env.packagePath }}"
        run: zip -r "${{ github.workspace }}/${{ env.zipFile }}" .

      - name: Track Package Meta Files
        run: find "${{ env.packagePath }}/" -name \*.meta >> metaList

      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@v1
        with:
          package-path: ${{ env.unityPackage }}
          include-files: metaList

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            ${{ env.zipFile }}
            ${{ env.unityPackage }}